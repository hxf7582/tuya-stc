C51 COMPILER V9.54   USER_OLED                                                             02/16/2021 21:59:39 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE USER_OLED
OBJECT MODULE PLACED IN .\Obj\User_OLED.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\User_OLED.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\;.\src;.\mcu_sdk
                    -) DEBUG OBJECTEXTEND PRINT(.\List\User_OLED.lst) TABS(2) OBJECT(.\Obj\User_OLED.obj)

line level    source

   1          /******************************************************************************
   2          文件名称: OLED.c
   3          文件标识: STC8A8K64S4A12
   4          摘    要: OLED操作函数
   5          当前版本: V1.0  
   6          完成日期: 2021.01.25
   7          *******************************************************************************/
   8          #define USER_OLED_GLOBALS
   9          #include "include.h"
  10          
  11          
  12          
  13          /*****************************************************************************
  14          函数名称 : OLED_WR_Byte
  15          功能描述 : OLED写一字节
  16          输入参数 : dat：要写入的数据 cmd=1写指令，cmd=0写数据
  17          返回参数 : 无
  18          使用说明 : 无
  19          *****************************************************************************/
  20          void OLED_WR_Byte(unsigned dat,unsigned cmd)
  21          {
  22   1        if(cmd==1)
  23   1        {
  24   2          WriteCmd(dat,OLED_Address);
  25   2        }
  26   1        else
  27   1        {
  28   2          WriteDat(dat,OLED_Address);
  29   2        }
  30   1      }
  31          /*****************************************************************************
  32          函数名称 : OLED_OLED_WR_Byte_con
  33          功能描述 : 连续写入count个数据
  34          输入参数 : dat[]：要写入的数据  count写入的个数
  35          返回参数 : 无
  36          使用说明 : 无
  37          *****************************************************************************/ 
  38          /*void OLED_OLED_WR_Byte_con(uint8_t dat[], uint16_t count)//写入连续数据count个
  39          {
  40            int i = 0;
  41            Start();
  42            SendData(OLED_Address);                        //D/C#=0; R/W#=0
  43            SendACK();       
  44            SendData(0x40);                        //write data
  45            SendACK();       
  46            for(i = 0 ;i < count ;i++)
  47            {
  48              SendData(dat[i]);
  49              SendACK();
  50            }
  51            Stop();
  52          }*/
  53          /*****************************************************************************
  54          函数名称 : OLED_OLED_WR_Byte_same
C51 COMPILER V9.54   USER_OLED                                                             02/16/2021 21:59:39 PAGE 2   

  55          功能描述 : 连续写入count个相同的数据
  56          输入参数 : dat：要写入的数据  count：重复次数
  57          返回参数 : 无
  58          使用说明 : 无
  59          *****************************************************************************/ 
  60          /*void OLED_OLED_WR_Byte_same(uint8_t dat, uint16_t count)//写入连续数据count个
  61          {
  62            int i = 0;
  63            Start();
  64            SendData(OLED_Address);                        //D/C#=0; R/W#=0
  65            SendACK();       
  66            SendData(0x40);                        //write data
  67            SendACK();       
  68            for(i = 0 ;i < count ;i++)
  69            {
  70              SendData(dat);
  71              SendACK();
  72            }
  73            Stop();
  74          }*/
  75          
  76          /*****************************************************************************
  77          函数名称 : OLED_Clear
  78          功能描述 : OLED清屏
  79          输入参数 : 无
  80          返回参数 : 无
  81          使用说明 : 无
  82          *****************************************************************************/
  83          void OLED_Clear(void)
  84          {
  85   1        uint8_t i,n;              //定义变量
  86   1        for(i=0; i<8; i++)
  87   1        {
  88   2          OLED_WR_Byte(0xb0+i,1); //设置页地址（0~7）
  89   2          OLED_WR_Byte(0x00,1);   //设置显示位置―列低地址
  90   2          OLED_WR_Byte(0x10,1);   //设置显示位置―列高地址
  91   2          for(n=0; n<128; n++)OLED_WR_Byte(0x00,0); //写0x00到屏幕寄存器上
  92   2        }
  93   1      }
  94          /*****************************************************************************
  95          函数名称 : OLED_SetPos
  96          功能描述 : 设置开始的光标位置
  97          输入参数 : x，y：位置
  98          返回参数 : 无
  99          使用说明 : 无
 100          *****************************************************************************/
 101          void OLED_SetPos(uint8_t x, uint8_t y)
 102          {
 103   1        OLED_WR_Byte(0xb0+y,1);             //写入页地址
 104   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,1); //写入列低地址
 105   1        OLED_WR_Byte(x&0x0f,1);             //写入列高地址
 106   1      }
 107          /*****************************************************************************
 108          函数名称 : OLED_ON
 109          功能描述 : 将OLED从休眠中唤醒
 110          输入参数 : 无
 111          返回参数 : 无
 112          使用说明 : 无
 113          *****************************************************************************/ 
 114          /*void OLED_ON(void)
 115          {
 116            OLED_WR_Byte(0X8D,1);  //设置电荷泵
C51 COMPILER V9.54   USER_OLED                                                             02/16/2021 21:59:39 PAGE 3   

 117            OLED_WR_Byte(0X14,1);  //开启电荷泵
 118            OLED_WR_Byte(0XAF,1);  //OLED唤醒
 119          }*/
 120          /*****************************************************************************
 121          函数名称 : OLED_OFF
 122          功能描述 : 让OLED休眠 -- 休眠模式下,OLED功耗不到10uA
 123          输入参数 : 无
 124          返回参数 : 无
 125          使用说明 : 无
 126          *****************************************************************************/ 
 127          /*void OLED_OFF(void)
 128          {
 129            OLED_WR_Byte(0X8D,1);  //设置电荷泵
 130            OLED_WR_Byte(0X10,1);  //关闭电荷泵
 131            OLED_WR_Byte(0XAE,1);  //OLED休眠
 132          }*/
 133          /*****************************************************************************
 134          函数名称 : OLED_ShowChar
 135          功能描述 : 显示6*8或8*16一个标准ASCII字符串
 136          输入参数 : x：起始列
 137                     y：起始页，TextSize = 16占两页；TextSize = 8占1页
 138                     ch：字符
 139          返回参数 : 无
 140          使用说明 : 无
 141          *****************************************************************************/ 
 142          void OLED_ShowChar(uint8_t x, uint8_t y, uint8_t ch, uint8_t TextSize)
 143          {
 144   1        uint8_t c=0,i=0;
 145   1        c = ch-' ';//获取字符的偏移量 
 146   1        if(x>Max_Column-1)//如果列书超出了范围，就从下2页的第0列开始
 147   1        {
 148   2          x=0;
 149   2          y=y+2;
 150   2        }
 151   1        if(TextSize==16)//字符大小如果为 2 = 8*16
 152   1        {
 153   2          OLED_SetPos(x,y);//从x y 开始画点
 154   2          for(i=0; i<8; i++)//循环8次 占8列
 155   2            OLED_WR_Byte(F8X16[c*16+i],0);//找出字符 c 的数组位置，先在第一页把列画完
 156   2          OLED_SetPos(x,y+1);//页数加1
 157   2          for(i=0; i<8; i++)//循环8次
 158   2            OLED_WR_Byte(F8X16[c*16+i+8],0);//把第二页的列数画完
 159   2        }
 160   1        else
 161   1        {//字符大小为 6 = 6*8
 162   2          OLED_SetPos(x,y);//一页就可以画完
 163   2          for(i=0; i<6; i++)//循环6次 ，占6列
 164   2            OLED_WR_Byte(F6x8[c][i],0);//把字符画完
 165   2        }
 166   1      }
 167          /*****************************************************************************
 168          函数名称 : OLED_ShowStr
 169          功能描述 : 显示字符串
 170          输入参数 : x：起始列
 171                     y：起始页
 172                     *ch：第一个字符首地址
 173                     TextSize：字符大小(1:6*8 ; 2:8*16)
 174          返回参数 : 无
 175          使用说明 : 无
 176          *****************************************************************************/ 
 177          void OLED_ShowStr(uint8_t x, uint8_t y, uint8_t *ch, uint8_t TextSize)
 178          {
C51 COMPILER V9.54   USER_OLED                                                             02/16/2021 21:59:39 PAGE 4   

 179   1        uint8_t j = 0;//定义变量
 180   1        while(ch[j] != '\0')//如果不是最后一个字符
 181   1        {   
 182   2          OLED_ShowChar(x,y,ch[j],TextSize);//显示字符
 183   2          if(TextSize==8)
 184   2          {
 185   3            x += 6;//列数加6 ，一个字符的列数占6
 186   3            if(x > 122)  //如果x超过128，切换页，从该页的第一列显示
 187   3            {
 188   4              x = 0;  
 189   4              y += 2;  
 190   4            }     
 191   3            j++;  //下一个字符
 192   3          }
 193   2          else
 194   2          {
 195   3            x += 8;//列数加8 ，一个字符的列数占8
 196   3            if(x > 120)  //如果x超过128，切换页，从该页的第一列显示
 197   3            {
 198   4              x = 0;  
 199   4              y += 2;  
 200   4            }     
 201   3            j++;  //下一个字符
 202   3          }
 203   2        }
 204   1      }
 205          /*****************************************************************************
 206          函数名称 : oled_pow
 207          功能描述 : 计算m^n
 208          输入参数 : m：输入的一个数   n：输入数的次方
 209          返回参数 : result：一个数的n次方
 210          使用说明 : 无
 211          *****************************************************************************/ 
 212          uint32_t oled_pow(uint8_t m,uint8_t n)
 213          {
 214   1        uint32_t result=1;   
 215   1        while(n--)result*=m;    
 216   1        return result;
 217   1      }         
 218          /*****************************************************************************
 219          函数名称 : OLED_ShowNum
 220          功能描述 : 在指定的位置，显示一个指定长度大小的数
 221          输入参数 : x：起始列
 222                     y：起始页
 223                     num：数字
 224                     len：数字的长度
 225                     TextSize：字符大小(1:6*8 ; 2:8*16)
 226          返回参数 : 无
 227          使用说明 : 无
 228          *****************************************************************************/ 
 229          void OLED_ShowNum(uint8_t x,uint8_t y,int num,uint8_t len,uint8_t TextSize)
 230          {           
 231   1        uint8_t i,t,temp;  //定义变量
 232   1        uint8_t enshow=0;   //定义变量
 233   1        if(TextSize==8)
 234   1          i = 6;
 235   1        else
 236   1          i = 8;
 237   1        if(num<0)  //要显示的数小于0
 238   1        {
 239   2          num = -num;
 240   2          OLED_ShowChar(x,y,'-',TextSize);
C51 COMPILER V9.54   USER_OLED                                                             02/16/2021 21:59:39 PAGE 5   

 241   2          for(t=0;t<len;t++)
 242   2          {
 243   3            temp=(num/oled_pow(10,len-t-1))%10;//取出输入数的每个位，由高到低
 244   3            if(enshow==0&&t<(len-1)) //enshow：是否为第一个数；t<(len-1)：判断是否为最后一个数
 245   3            {
 246   4              if(temp==0) //如果该数为0 
 247   4              {
 248   5                OLED_ShowChar(x+i*(t+1),y,' ',TextSize);//显示 0 ；x+(size2/2)*t根据字体大小偏移的列数（8）
 249   5                continue; //跳过剩下语句，继续重复循环（避免重复显示）
 250   5              }else enshow=1; 
 251   4            }
 252   3            OLED_ShowChar(x+i*(t+1),y,temp+'0',TextSize); //显示一个位；x+(size2/2)*t根据字体大小偏移的列数（8）
 253   3          }
 254   2        }
 255   1        else  //要显示的数大于0
 256   1        {
 257   2          for(t=0;t<len;t++)
 258   2          {
 259   3            temp=(num/oled_pow(10,len-t-1))%10;//取出输入数的每个位，由高到低
 260   3            if(enshow==0&&t<(len-1)) //enshow：是否为第一个数；t<(len-1)：判断是否为最后一个数
 261   3            {
 262   4              if(temp==0) //如果该数为0 
 263   4              {
 264   5                OLED_ShowChar(x+i*t,y,' ',TextSize);//显示 0 ；x+(size2/2)*t根据字体大小偏移的列数（8）
 265   5                continue; //跳过剩下语句，继续重复循环（避免重复显示）
 266   5              }else enshow=1; 
 267   4            }
 268   3            OLED_ShowChar(x+i*t,y,temp+'0',TextSize); //显示一个位；x+(size2/2)*t根据字体大小偏移的列数（8）
 269   3          }
 270   2        }
 271   1      } 
 272          /*****************************************************************************
 273          函数名称 : OLED_ShowCHinese
 274          功能描述 : 显示中文
 275          输入参数 : x：起始列，一个字占16列 y：起始页，一个字占两页 no：字体的序列号
 276          返回参数 : 无
 277          使用说明 : 无
 278          *****************************************************************************/ 
 279          void OLED_ShowCHinese(uint8_t x,uint8_t y,uint8_t no)
 280          {               
 281   1        uint8_t t,adder=0; //定义变量
 282   1        OLED_SetPos(x,y); //从 x y 开始画点，先画第一页
 283   1          for(t=0;t<16;t++) //循环16次，画第一页的16列
 284   1          {
 285   2              OLED_WR_Byte(Hzk[2*no][t],0);//画no在数组位置的第一页16列的点
 286   2              adder+=1; //数组地址加1
 287   2           }  
 288   1          OLED_SetPos(x,y+1); //画第二列
 289   1          for(t=0;t<16;t++)//循环16次，画第二页的16列
 290   1            { 
 291   2              OLED_WR_Byte(Hzk[2*no+1][t],0);//画no在数组位置的第二页16列的点
 292   2              adder+=1;//数组地址加1
 293   2            }         
 294   1      }
 295          
 296          /*****************************************************************************
 297          函数名称 : OLED_DrawBMP
 298          功能描述 : 显示图片
 299          输入参数 : x0：起始列地址（0~127）
 300                     y0：起始页地址（0~7）
 301                     x1：终止列地址（1~128）
 302                     y1：终止页地址（1~8）
C51 COMPILER V9.54   USER_OLED                                                             02/16/2021 21:59:39 PAGE 6   

 303                     BMP[]：存放图片代码的数组
 304          返回参数 : 无
 305          使用说明 : 无
 306          *****************************************************************************/ 
 307          void OLED_DrawBMP(uint8_t x0,uint8_t y0,uint8_t x1,uint8_t y1,uint8_t BMP[])
 308          {
 309   1        uint16_t j=0;  //定义变量
 310   1        uint8_t x,y;   //定义变量
 311   1       
 312   1        if(y1%8==0)    //判断终止页是否为8的整数倍
 313   1          y = y1/8;
 314   1        else
 315   1          y = y1/8 + 1;
 316   1        for(y=y0; y<y1; y++)   //从起始页开始，画到终止页
 317   1        {
 318   2          OLED_SetPos(x0,y);   //在页的起始列开始画
 319   2          for(x=x0; x<x1; x++) //画x1 - x0 列
 320   2          {
 321   3            OLED_WR_Byte(BMP[j++],0);//画图片的点
 322   3          }
 323   2        }
 324   1      }
 325          /*****************************************************************************
 326          函数名称 : OLED_ShowInt
 327          功能描述 : 
 328          输入参数 : 无
 329          返回参数 : 无
 330          使用说明 : 无
 331          *****************************************************************************/ 
 332          //****************功能描述： 显示6*8或8*16的5位整数   显示的坐标（x,y），y为页范围0～7********************
             -********
 333           
 334          /*例
 335          OLED_ShowInt(0,0,0,1);   //在(0,0)处，显示6*8的"0"
 336          OLED_ShowInt(5,4,12345,2);//在(5,4)处，显示8*16的"12345"
 337          */
 338          /*void OLED_ShowInt(uint8_t x, uint8_t y, int Data, uint8_t TextSize)
 339          {
 340            uint8_t temp;
 341            OLED_SetPos(x,y);
 342            switch(TextSize)
 343            {
 344            case 1:
 345            {
 346              if(Data<0)
 347              {
 348                OLED_ShowChar(x,y,'-',1);
 349                x+=6;
 350                Data=-Data;
 351              }
 352              //接下来要显示正数，清空上一次显示负数的个位
 353              //负数比正数多一个负号，额外占了一个显示位
 354              OLED_ShowChar(x+30,y,' ',1);
 355           
 356              temp=Data/10000;
 357              OLED_ShowChar(x,y,(temp+'0'),1);
 358           
 359              Data%=10000;
 360              temp=Data/1000;
 361              OLED_ShowChar(x+6,y,(temp+'0'),1);
 362           
 363              Data%=1000;
C51 COMPILER V9.54   USER_OLED                                                             02/16/2021 21:59:39 PAGE 7   

 364              temp=Data/100;
 365              OLED_ShowChar(x+12,y,(temp+'0'),1);
 366           
 367              Data%=100;
 368              temp=Data/10;
 369              OLED_ShowChar(x+18,y,(temp+'0'),1);
 370           
 371              Data%=10;
 372              temp=Data;
 373              OLED_ShowChar(x+24,y,(temp+'0'),1);
 374            }
 375            break;
 376            case 2:
 377            {
 378              if(Data<0)
 379              {
 380                OLED_ShowChar(x,y,'-',2);
 381                x+=8;
 382                Data=-Data;
 383              }
 384              //接下来要显示正数，清空上一次显示负数的个位
 385              //负数比正数多一个负号，额外占了一个显示位
 386              OLED_ShowChar(x+40,y,' ',2);
 387           
 388              temp=Data/10000;
 389              OLED_ShowChar(x,y,(temp+'0'),2);
 390           
 391              Data%=10000;
 392              temp=Data/1000;
 393              OLED_ShowChar(x+8,y,(temp+'0'),2);
 394           
 395              Data%=1000;
 396              temp=Data/100;
 397              OLED_ShowChar(x+16,y,(temp+'0'),2);
 398           
 399              Data%=100;
 400              temp=Data/10;
 401              OLED_ShowChar(x+24,y,(temp+'0'),2);
 402           
 403              Data%=10;
 404              temp=Data;
 405              OLED_ShowChar(x+32,y,(temp+'0'),2);
 406            }
 407            break;
 408            }
 409          }*/
 410          
 411          
 412          /*void OLED_ShowData_uchar(uint8_t x, uint8_t y, uint8_t dat,uint8_t TextSize)    //显示无符号char数据
 413          {
 414            uint8_t display_tab[4];
 415            display_tab[0]=dat/100+'0';
 416            display_tab[1]=dat/10%10+'0';
 417            display_tab[2]=dat%10+'0';
 418            //display_tab[3]='\n';
 419            OLED_ShowStr(x,y,display_tab,TextSize);
 420          }*/
 421          
 422          /*****************************************************************************
 423          函数名称 : OLED_Init
 424          功能描述 : OLED初始化
 425          输入参数 : 无
C51 COMPILER V9.54   USER_OLED                                                             02/16/2021 21:59:39 PAGE 8   

 426          返回参数 : 无
 427          使用说明 : 无
 428          *****************************************************************************/
 429          void OLED_Init()
 430          {
 431   1        
 432   1        delay_ms(200);
 433   1        //OLED_RES_Set();
 434   1        OLED_WR_Byte(0xAE,1);//--display off
 435   1        OLED_WR_Byte(0x00,1);//--set low column address
 436   1        OLED_WR_Byte(0x10,1);//--set high column address
 437   1        OLED_WR_Byte(0x40,1);//--set display start line
 438   1        OLED_WR_Byte(0xB0,1);//--set page address
 439   1        OLED_WR_Byte(0x81,1);//--contract control
 440   1        OLED_WR_Byte(0xFF,1);//--Set SEG Output Current Brightness
 441   1        OLED_WR_Byte(0xA1,1);//--set segment remap     0xa0左右反置 0xa1正常
 442   1        OLED_WR_Byte(0xA6,1);//--normal / reverse
 443   1        OLED_WR_Byte(0xA8,1);//--multiplex ratio
 444   1        OLED_WR_Byte(0x3F,1);//--duty = 1/64
 445   1        OLED_WR_Byte(0xC8,1);//--Com scan direction   0xc0上下反置 0xc8正常
 446   1        OLED_WR_Byte(0xD3,1);//--set display offset
 447   1        OLED_WR_Byte(0x00,1);//
 448   1        OLED_WR_Byte(0xD5,1);//--set osc division
 449   1        OLED_WR_Byte(0x80,1);//--set divide ratio, Set Clock as 100 Frames/Sec
 450   1        OLED_WR_Byte(0xD9,1);//--set pre-charge period
 451   1        OLED_WR_Byte(0xF1,1);//--Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 452   1        OLED_WR_Byte(0xDA,1);//--set COM pins
 453   1        OLED_WR_Byte(0x12,1);//
 454   1        OLED_WR_Byte(0xDB,1);//--set vcomh
 455   1      //OLED_WR_Byte(0x40,1);//--Set VCOM Deselect Level
 456   1        OLED_WR_Byte(0x30,1);//
 457   1        OLED_WR_Byte(0x8D,1);//--set charge pump disable
 458   1        OLED_WR_Byte(0x14,1);//--set(0x10) disable
 459   1        OLED_WR_Byte(0xaf,1);//--turn on oled panel
 460   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1455    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      50
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
